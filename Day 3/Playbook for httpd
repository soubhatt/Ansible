[student@workstation ansible-navigator]$ mkdir day2
[student@workstation ansible-navigator]$ cd day2
[student@workstation day2]$ cp ../inventory ../ansible.cfg .
[student@workstation day2]$
[student@workstation day2]$ ls
    ansible.cfg  inventory
[student@workstation day2]$ ansible server1 -m command -a 'rpm -q httpd'
    server1 | FAILED | rc=1 >>
    package httpd is not installednon-zero return code
[student@workstation day2]$
[student@workstation day2]$ vim httpd.yml
[student@workstation day2]$ ansible-navigator run httpd.yml -m stdout --syntax-check
    playbook: /home/student/ansible-navigator/day2/httpd.yml
[student@workstation day2]$
[student@workstation day2]$ ansible-navigator run httpd.yml -m stdout

PLAY [Install httpd and firewall to run a webserver] ***************************

TASK [Gathering Facts] *********************************************************
ok: [server1]

TASK [Install httpd and firewall] **********************************************
ok: [server1]

TASK [add new content in httpd] ************************************************
changed: [server1]

TASK [start firewalld service] *************************************************
ok: [server1]

TASK [add http in firewall] ****************************************************
changed: [server1]

TASK [Start httpd service] *****************************************************
changed: [server1]

PLAY RECAP *********************************************************************
server1                    : ok=6    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
[student@workstation day2]$


#======= ANISBLE-DOC USEAGE=========#
[student@workstation day2]$ ansible-doc dnf
    > ANSIBLE.BUILTIN.DNF    (/usr/local/lib/python3.9/site-packages/ansible/module>

        Installs, upgrade, removes, and lists packages and groups with
        the `dnf' package manager.

    ADDED IN: version 1.9 of ansible-core

    * note: This module has a corresponding action plugin.

    OPTIONS (= is mandatory):

    - allow_downgrade
        Specify if the named package and version is allowed to
        downgrade a maybe already installed higher version of that
        package. Note that setting allow_downgrade=True can make this
        module behave in a non-idempotent way. The task could end up
        with a set of packages that does not match the complete list
        of specified packages to install (because dependencies between
        the downgraded package and others can cause changes to the
        packages which were in the earlier transaction).
        default: 'no'
        type: bool
        added in: version 2.7 of ansible-core

    ...skipping...
    EXAMPLES:

    - name: Install the latest version of Apache
    ansible.builtin.dnf:
    name: httpd
    state: latest

    - name: Install Apache >= 2.4
    ansible.builtin.dnf:
    name: httpd >= 2.4
    state: present

    - name: Install the latest version of Apache and MariaDB
    ansible.builtin.dnf:
    name:
      - httpd
      - mariadb-server
    state: latest

    - name: Remove the Apache package
    ansible.builtin.dnf:
    name: httpd
    state: absent
[student@workstation day2]$
#we can search /EXAMPLES for any module
# dnf / copy / service ...etc 
